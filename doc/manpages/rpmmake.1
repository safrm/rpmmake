'\" t
.\"     Title: rpmmake
.\"    Author: Miroslav Safr <miroslav.safr@gmail.com>
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 20140210_1301
.\"    Manual: Fast way to create rpm package inside the git repo without being root
.\"    Source: rpmmake 1.0.16
.\"  Language: English
.\"
.TH "RPMMAKE" "1" "20140210_1301" "rpmmake 1.0.16" "Fast way to create rpm package"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rpmmake \- Fast way to create rpm package inside the git repo without being root
.SH "SYNOPSIS"
.HP \w'\fBrpmmake\ [<path_to_project_git_dir>]\ [OPTIONS]\fR\ 'u
\fBrpmmake [<path_to_project_git_dir>] [OPTIONS]\fR [\-b\ \-\-basename\ <my\-project>] [\-sv\ \-\-set\-version\ <my\-version>] [\-sr\ \-\-set\-release\ <my\-release>] [\-sp\ \-\-spec\-version] [\-gn\ \-\-gpg\-name\ <gpg\-name>] [\-gk\ \-\-gpg\-key\ <gpg\-key>] [\-ns\ \-\-nosign] [\-ne\ \-\-noexpect] [\-nv\ \-\-noverify] [\-pp\ \-\-passphrase\ <passphrase>] [\-eo\ \-\-extra\-build\-options\ <opt>] [\-v\ \-\-verbose] [\-V\ \-\-version] [\-h\ \-\-help]
.SH "DESCRIPTION"
.PP
Fast way to create rpm package inside the git repo without being root and maintain rpm\-based releases\&. git clone <project> rpmmake publish rpm packages
.SH "OPTIONS"
.PP
\-b \-\-basename <my\-project>
.RS 4
Project name is taken from argument <my\-project> instead of directory name\&.
.RE
.PP
\-sv \-\-set\-version <my\-version>
.RS 4
Project version is taken from argument <my\-version> instead of git tag\&.
.RE
.PP
\-sr \-\-set\-release <my\-release>
.RS 4
Project release is taken from argument <my\-release> instead of spec file\&.
.RE
.PP
\-sp \-\-spec\-version
.RS 4
Prefer version from spec file over git tag\&.
.RE
.PP
\-gn \-\-gpg\-name <gpg\-name>
.RS 4
Set custom gpg name for signing by name\&.
.RE
.PP
\-gk \-\-gpg\-key <gpg\-key>
.RS 4
Set custom gpg name for signing by key\&.
.RE
.PP
\-ns \-\-nosign
.RS 4
Do not sign the package\&.
.RE
.PP
\-ne \-\-noexpect
.RS 4
Do not use expect to enter passphrase for signing\&. has to be entered manually\&.
.RE
.PP
\-nv \-\-noverify
.RS 4
Do not run package verification\&.
.RE
.PP
\-pp \-\-passphrase <passphrase>
.RS 4
Pass passphrase by argumet or use export PASSPHRASE=<passphrase>\&.
.RE
.PP
\-eo \-\-extra\-build\-options <opt>
.RS 4
Pass extra build options to rpmbuild\&. Can contain multiple arguments\&. Example: \-\-target=ARM6 \-\-nodeps
.RE
.PP
\-v \-\-verbose
.RS 4
Prints more output\&.
.RE
.PP
\-V \-\-version
.RS 4
Prints version of scripts\&.
.RE
.PP
\-h \-\-help
.RS 4
Print help text to the screen\&.
.RE
.SH "PATH_TO_PROJECT_GIT_DIR"
.PP
Root directory for building\&.Should have the same name as project and contain project\&.spec (otherwise \-b)\&. when it is not specified it takes current directory\&.
.SH "SEE ALSO"
.PP
rpmmake\-changelog(1), rpmmake\-debchangelog(1), rpmmake\-expect(1)\&.
\m[blue]\fB\%http://safrm.net/projects/rpmmake/\fR\m[]
.SH "AUTHOR"

    Miroslav Å afr <miroslav\&.safr@gmail\&.com>
  .SH "LICENSE"

   LGPL2
  .SH "AUTHOR"
.PP
\fBMiroslav Safr\fR <\&miroslav\&.safr@gmail\&.com\&>
.RS 4
Author and maintainer
.RE
