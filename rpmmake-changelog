#!/bin/sh
#rpmmake-changelog - generates rpm changelog from git log - http://safrm.net/projects/rpmmake
#author: Miroslav Safr <miroslav.safr@gmail.com>
VERSION=NA
VERSION_DATE=NA

#support color escape characters on different terminals
alias echo="/bin/echo -e"
RPMMAKE_CHL=`basename $0`

usage() {
    echo "$RPMMAKE_CHL ${VERSION} - fast script to create rpm changelog from git log"
    echo " http://safrm.net/projects/rpmmake/"
    echo "Usage:$RPMMAKE_CHL [OPTIONS] ... [PROJECT_DIR]"
    echo "OPTIONS:"
    echo "  -b,   --basename <my-project> .... project name is taken from argument <my-project> instead of directory name"
    echo "  -t,   --tags <N> ................. amount of last tags to generate changelog from  (default 6)"
    echo "  -sv,  --set-version <version> .... sets latest changelog version"
    echo "  -id,  --include-dir <dir-name> ... include only changes from selected directory"
    echo "  -a,   --append-line <my-message> . appended last line (more info on http..)"
    echo "  -V,   --version .................. prints version of scripts"
    echo "  -h,   --help ..................... prints this help"
    echo ""
}

TAGS_COUNT=6 #default to limit size
APPEND_LINE=""
while [ $# -gt 0 ]; do
    case "$1" in
        -b|--basename) shift ; BASENAME=$1    #clone directory has different name than project
        ;;
        -t|--tags) shift ; TAGS_COUNT=$1
        ;;
        -a|--append-line) shift ; APPEND_LINE=$1
        ;;
        -sv|--set-version) shift ; RPM_VERSION=$1           #custom version
        ;;
        -id|--include-dir) shift ; INCLUDED_DIRS="$1 $INCLUDED_DIRS"
        ;;
        -V|--version) echo "$RPMMAKE_CHL  ${VERSION} ${VERSION_DATE}" ; exit 0
        ;;
        -h|--help) usage ; exit 0
        ;;
        *)         PWD_DIR=$PWD; cd $1   #from different directory
        ;;
    esac
    shift
done

#basename from arg or directory
[ -z "$BASENAME" ] && BASENAME=`basename "$PWD"`
CHANGES_FILE=$BASENAME.changes

#generate
echo "%changelog"  > $CHANGES_FILE

#+1 number correction because we need previous tag info
TAGS_COUNT=$(($TAGS_COUNT+1))
TAGS=`git tag | sort -V -u -r | head -$TAGS_COUNT`

#tags & commits
FIRST_TAG=
#previous is in this case newer
HIGHER_TAG=
HIGHER_TAG_HASH=
for TAG in $TAGS
do
    #not tagged changes
    TAG_HASH=`git rev-list $TAG | head -n 1`
    if [ -z "$FIRST_TAG" ]; then
        FIRST_TAG=$TAG
        echo "first tag: $FIRST_TAG - $TAG_HASH"
        HEAD_VERSION_COMMITS=`git log $TAG_HASH..HEAD --pretty=format:'- %s' 2> /dev/null`
        HEAD_VERSION_TAG=`git describe --tags  --dirty=* 2> /dev/null`
        LAST_COMMIT_DATE=`git log -1 --pretty=format:'%ad' | awk '{print $1,$2,$3,$5}'`
        LAST_COMMIT_AUTHOR=`git log -1 --pretty=format:'%an <%ae>'`
        if [ -n "$HEAD_VERSION_COMMITS" ]; then
            if [ -z "$RPM_VERSION" ]; then
                #we use last tag + git hash
                RPM_HEAD_VERSION_TAG=$( echo "$HEAD_VERSION_TAG" | sed 's/[-+~]/_/g' )
                echo "* $LAST_COMMIT_DATE $LAST_COMMIT_AUTHOR - $RPM_HEAD_VERSION_TAG"  >> $CHANGES_FILE
                git log $TAG_HASH..HEAD --pretty=format:'- %w(72,1,2)%s' $INCLUDED_DIRS 2> /dev/null >> $CHANGES_FILE
                echo "\n"  >> $CHANGES_FILE
            else
                #we use given version
                echo "* $LAST_COMMIT_DATE $LAST_COMMIT_AUTHOR - $RPM_VERSION"  >> $CHANGES_FILE
                git log $TAG_HASH..HEAD --pretty=format:'- %w(72,1,2)%s' $INCLUDED_DIRS 2> /dev/null >> $CHANGES_FILE
            fi
        fi
    fi
    if [ -n "$HIGHER_TAG_HASH" ]; then
        #tag changes for each tag
        TAG_COMMIT_DATE=`git log $HIGHER_TAG_HASH -1 --pretty=format:'%ad' | awk '{print $1,$2,$3,$5}'`
        TAG_COMMIT_AUTHOR=`git log $HIGHER_TAG_HASH -1 --pretty=format:'%an <%ae>'`
        if [ -n "$HEAD_VERSION_COMMITS" -a "x$HIGHER_TAG" = "x$DEB_VERSION" ]; then
            :
        else
            #we don't repeat highest version 2x
            RPM_HIGHER_TAG=$( echo "$HIGHER_TAG" | sed 's/[-+~]/_/g' )
            echo "* $TAG_COMMIT_DATE $TAG_COMMIT_AUTHOR - $RPM_HIGHER_TAG"  >> $CHANGES_FILE
        fi
        git log $TAG_HASH..$HIGHER_TAG_HASH --pretty=format:'- %w(72,1,2)%s' $INCLUDED_DIRS >> $CHANGES_FILE
        echo "\n"  >> $CHANGES_FILE
    fi
    HIGHER_TAG=$TAG
    HIGHER_TAG_HASH=$TAG_HASH
done

#before first tag
if [ `echo "$TAGS" | wc -l` -lt $TAGS_COUNT ]; then
    BEFORE_FIRST_TAG_COMMITS=`git log $TAG_HASH --pretty=format:'- %s' 2> /dev/null`
    if [ -n "$BEFORE_FIRST_TAG_COMMITS" ]; then
        TAG_COMMIT_DATE=`git log $TAG_HASH -1 --pretty=format:'%ad' | awk '{print $1,$2,$3,$5}'`
        TAG_COMMIT_AUTHOR=`git log $TAG_HASH -1 --pretty=format:'%an <%ae>'`
        #when there are no tags
        if [ -z "$TAGS" ]; then
            echo "There are no tags."
            LAST_COMMIT_DATE=`git log -1 --pretty=format:'%ad' | awk '{print $1,$2,$3,$5}'`
            LAST_COMMIT_AUTHOR=`git log -1 --pretty=format:'%an <%ae>'`
            if [ -z "$RPM_VERSION" ]; then
                RPM_VERSION=0.0.0
            fi
            RPM_RPM_VERSION=$( echo "$RPM_VERSION" | sed 's/[-+~]/_/g' )
            echo "* `date +"%a %b %d %Y"` `git config user.name` <`git config user.email`>  - $RPM_RPM_VERSION"  >> $CHANGES_FILE
        else
            RPM_TAG=$( echo "$TAG" | sed 's/[-+~]/_/g' )
            echo "* $TAG_COMMIT_DATE $TAG_COMMIT_AUTHOR - $RPM_TAG"  >> $CHANGES_FILE
        fi
        git log $TAG_HASH --pretty=format:'- %w(72,1,2)%s' $INCLUDED_DIRS >> $CHANGES_FILE
        echo "\n"  >> $CHANGES_FILE
    fi
fi
#extra line
if [ -n "$APPEND_LINE" ]; then
    echo $APPEND_LINE  >> $CHANGES_FILE
fi
echo "rpm changelog for $TAGS_COUNT tags updated in ./$CHANGES_FILE"


